/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "../common";

export type PrivateCapsuleCreateParamsStruct = {
  tokenId: BigNumberish;
  message: string;
  readKey: string;
  revealKey: string;
  unlockTimestamp: BigNumberish;
};

export type PrivateCapsuleCreateParamsStructOutput = [
  tokenId: bigint,
  message: string,
  readKey: string,
  revealKey: string,
  unlockTimestamp: bigint
] & {
  tokenId: bigint;
  message: string;
  readKey: string;
  revealKey: string;
  unlockTimestamp: bigint;
};

export type PublicCapsuleCreateParamsStruct = {
  tokenId: BigNumberish;
  message: string;
  revealKey: string;
  unlockTimestamp: BigNumberish;
};

export type PublicCapsuleCreateParamsStructOutput = [
  tokenId: bigint,
  message: string,
  revealKey: string,
  unlockTimestamp: bigint
] & {
  tokenId: bigint;
  message: string;
  revealKey: string;
  unlockTimestamp: bigint;
};

export type ReadPrivateCapsuleParamsStruct = {
  tokenId: BigNumberish;
  readKey: string;
};

export type ReadPrivateCapsuleParamsStructOutput = [
  tokenId: bigint,
  readKey: string
] & { tokenId: bigint; readKey: string };

export type PrivateCapsuleParamsStruct = {
  message: string;
  readMessageHash: BytesLike;
  revealMessageHash: BytesLike;
  unlockTimestamp: BigNumberish;
};

export type PrivateCapsuleParamsStructOutput = [
  message: string,
  readMessageHash: string,
  revealMessageHash: string,
  unlockTimestamp: bigint
] & {
  message: string;
  readMessageHash: string;
  revealMessageHash: string;
  unlockTimestamp: bigint;
};

export type PrivateCapsuleDataStruct = {
  data: PrivateCapsuleParamsStruct;
  status: BigNumberish;
};

export type PrivateCapsuleDataStructOutput = [
  data: PrivateCapsuleParamsStructOutput,
  status: bigint
] & { data: PrivateCapsuleParamsStructOutput; status: bigint };

export type ReadPublicCapsuleParamsStruct = { tokenId: BigNumberish };

export type ReadPublicCapsuleParamsStructOutput = [tokenId: bigint] & {
  tokenId: bigint;
};

export type PublicCapsuleParamsStruct = {
  message: string;
  revealMessageHash: BytesLike;
  unlockTimestamp: BigNumberish;
};

export type PublicCapsuleParamsStructOutput = [
  message: string,
  revealMessageHash: string,
  unlockTimestamp: bigint
] & { message: string; revealMessageHash: string; unlockTimestamp: bigint };

export type PublicCapsuleDataStruct = {
  data: PublicCapsuleParamsStruct;
  status: BigNumberish;
};

export type PublicCapsuleDataStructOutput = [
  data: PublicCapsuleParamsStructOutput,
  status: bigint
] & { data: PublicCapsuleParamsStructOutput; status: bigint };

export type RevealPrivateCapsuleParamsStruct = {
  tokenId: BigNumberish;
  revealKey: string;
};

export type RevealPrivateCapsuleParamsStructOutput = [
  tokenId: bigint,
  revealKey: string
] & { tokenId: bigint; revealKey: string };

export type RevealPublicCapsuleParamsStruct = {
  tokenId: BigNumberish;
  revealKey: string;
};

export type RevealPublicCapsuleParamsStructOutput = [
  tokenId: bigint,
  revealKey: string
] & { tokenId: bigint; revealKey: string };

export interface CapsuleManagerInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "authenticateCaller"
      | "createPrivateCapsule"
      | "createPrivateCapsuleBatch"
      | "createPublicCapsule"
      | "createPublicCapsuleBatch"
      | "deauthenticateCaller"
      | "getPrivateCapsuleMetadata"
      | "getPublicCapsuleMetadata"
      | "owner"
      | "renounceOwnership"
      | "revealPrivateCapsule"
      | "revealPublicCapsule"
      | "transferOwnership"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic:
      | "DeployDependencies"
      | "OwnershipTransferred"
      | "PrivateCapsuleCreated"
      | "PrivateCapsuleRevealed"
      | "PublicCapsuleCreated"
      | "PublicCapsuleRevealed"
  ): EventFragment;

  encodeFunctionData(
    functionFragment: "authenticateCaller",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "createPrivateCapsule",
    values: [PrivateCapsuleCreateParamsStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "createPrivateCapsuleBatch",
    values: [PrivateCapsuleCreateParamsStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "createPublicCapsule",
    values: [PublicCapsuleCreateParamsStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "createPublicCapsuleBatch",
    values: [PublicCapsuleCreateParamsStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "deauthenticateCaller",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getPrivateCapsuleMetadata",
    values: [ReadPrivateCapsuleParamsStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "getPublicCapsuleMetadata",
    values: [ReadPublicCapsuleParamsStruct]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "revealPrivateCapsule",
    values: [RevealPrivateCapsuleParamsStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "revealPublicCapsule",
    values: [RevealPublicCapsuleParamsStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [AddressLike]
  ): string;

  decodeFunctionResult(
    functionFragment: "authenticateCaller",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createPrivateCapsule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createPrivateCapsuleBatch",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createPublicCapsule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createPublicCapsuleBatch",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "deauthenticateCaller",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPrivateCapsuleMetadata",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPublicCapsuleMetadata",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revealPrivateCapsule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revealPublicCapsule",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;
}

export namespace DeployDependenciesEvent {
  export type InputTuple = [
    registry: AddressLike,
    publicCapsuleCollection: AddressLike,
    privateCapsuleCollection: AddressLike
  ];
  export type OutputTuple = [
    registry: string,
    publicCapsuleCollection: string,
    privateCapsuleCollection: string
  ];
  export interface OutputObject {
    registry: string;
    publicCapsuleCollection: string;
    privateCapsuleCollection: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace OwnershipTransferredEvent {
  export type InputTuple = [previousOwner: AddressLike, newOwner: AddressLike];
  export type OutputTuple = [previousOwner: string, newOwner: string];
  export interface OutputObject {
    previousOwner: string;
    newOwner: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace PrivateCapsuleCreatedEvent {
  export type InputTuple = [tokenId: BigNumberish, owner: AddressLike];
  export type OutputTuple = [tokenId: bigint, owner: string];
  export interface OutputObject {
    tokenId: bigint;
    owner: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace PrivateCapsuleRevealedEvent {
  export type InputTuple = [tokenId: BigNumberish, informant: AddressLike];
  export type OutputTuple = [tokenId: bigint, informant: string];
  export interface OutputObject {
    tokenId: bigint;
    informant: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace PublicCapsuleCreatedEvent {
  export type InputTuple = [tokenId: BigNumberish, owner: AddressLike];
  export type OutputTuple = [tokenId: bigint, owner: string];
  export interface OutputObject {
    tokenId: bigint;
    owner: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace PublicCapsuleRevealedEvent {
  export type InputTuple = [tokenId: BigNumberish, informant: AddressLike];
  export type OutputTuple = [tokenId: bigint, informant: string];
  export interface OutputObject {
    tokenId: bigint;
    informant: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface CapsuleManager extends BaseContract {
  connect(runner?: ContractRunner | null): CapsuleManager;
  waitForDeployment(): Promise<this>;

  interface: CapsuleManagerInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  authenticateCaller: TypedContractMethod<
    [user: AddressLike],
    [void],
    "nonpayable"
  >;

  createPrivateCapsule: TypedContractMethod<
    [params: PrivateCapsuleCreateParamsStruct],
    [void],
    "nonpayable"
  >;

  createPrivateCapsuleBatch: TypedContractMethod<
    [paramsList: PrivateCapsuleCreateParamsStruct[]],
    [void],
    "nonpayable"
  >;

  createPublicCapsule: TypedContractMethod<
    [params: PublicCapsuleCreateParamsStruct],
    [void],
    "nonpayable"
  >;

  createPublicCapsuleBatch: TypedContractMethod<
    [paramsList: PublicCapsuleCreateParamsStruct[]],
    [void],
    "nonpayable"
  >;

  deauthenticateCaller: TypedContractMethod<
    [user: AddressLike],
    [void],
    "nonpayable"
  >;

  getPrivateCapsuleMetadata: TypedContractMethod<
    [readParams: ReadPrivateCapsuleParamsStruct],
    [PrivateCapsuleDataStructOutput],
    "view"
  >;

  getPublicCapsuleMetadata: TypedContractMethod<
    [readParams: ReadPublicCapsuleParamsStruct],
    [PublicCapsuleDataStructOutput],
    "view"
  >;

  owner: TypedContractMethod<[], [string], "view">;

  renounceOwnership: TypedContractMethod<[], [void], "nonpayable">;

  revealPrivateCapsule: TypedContractMethod<
    [params: RevealPrivateCapsuleParamsStruct],
    [void],
    "nonpayable"
  >;

  revealPublicCapsule: TypedContractMethod<
    [params: RevealPublicCapsuleParamsStruct],
    [void],
    "nonpayable"
  >;

  transferOwnership: TypedContractMethod<
    [newOwner: AddressLike],
    [void],
    "nonpayable"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "authenticateCaller"
  ): TypedContractMethod<[user: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "createPrivateCapsule"
  ): TypedContractMethod<
    [params: PrivateCapsuleCreateParamsStruct],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "createPrivateCapsuleBatch"
  ): TypedContractMethod<
    [paramsList: PrivateCapsuleCreateParamsStruct[]],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "createPublicCapsule"
  ): TypedContractMethod<
    [params: PublicCapsuleCreateParamsStruct],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "createPublicCapsuleBatch"
  ): TypedContractMethod<
    [paramsList: PublicCapsuleCreateParamsStruct[]],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "deauthenticateCaller"
  ): TypedContractMethod<[user: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "getPrivateCapsuleMetadata"
  ): TypedContractMethod<
    [readParams: ReadPrivateCapsuleParamsStruct],
    [PrivateCapsuleDataStructOutput],
    "view"
  >;
  getFunction(
    nameOrSignature: "getPublicCapsuleMetadata"
  ): TypedContractMethod<
    [readParams: ReadPublicCapsuleParamsStruct],
    [PublicCapsuleDataStructOutput],
    "view"
  >;
  getFunction(
    nameOrSignature: "owner"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "renounceOwnership"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "revealPrivateCapsule"
  ): TypedContractMethod<
    [params: RevealPrivateCapsuleParamsStruct],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "revealPublicCapsule"
  ): TypedContractMethod<
    [params: RevealPublicCapsuleParamsStruct],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "transferOwnership"
  ): TypedContractMethod<[newOwner: AddressLike], [void], "nonpayable">;

  getEvent(
    key: "DeployDependencies"
  ): TypedContractEvent<
    DeployDependenciesEvent.InputTuple,
    DeployDependenciesEvent.OutputTuple,
    DeployDependenciesEvent.OutputObject
  >;
  getEvent(
    key: "OwnershipTransferred"
  ): TypedContractEvent<
    OwnershipTransferredEvent.InputTuple,
    OwnershipTransferredEvent.OutputTuple,
    OwnershipTransferredEvent.OutputObject
  >;
  getEvent(
    key: "PrivateCapsuleCreated"
  ): TypedContractEvent<
    PrivateCapsuleCreatedEvent.InputTuple,
    PrivateCapsuleCreatedEvent.OutputTuple,
    PrivateCapsuleCreatedEvent.OutputObject
  >;
  getEvent(
    key: "PrivateCapsuleRevealed"
  ): TypedContractEvent<
    PrivateCapsuleRevealedEvent.InputTuple,
    PrivateCapsuleRevealedEvent.OutputTuple,
    PrivateCapsuleRevealedEvent.OutputObject
  >;
  getEvent(
    key: "PublicCapsuleCreated"
  ): TypedContractEvent<
    PublicCapsuleCreatedEvent.InputTuple,
    PublicCapsuleCreatedEvent.OutputTuple,
    PublicCapsuleCreatedEvent.OutputObject
  >;
  getEvent(
    key: "PublicCapsuleRevealed"
  ): TypedContractEvent<
    PublicCapsuleRevealedEvent.InputTuple,
    PublicCapsuleRevealedEvent.OutputTuple,
    PublicCapsuleRevealedEvent.OutputObject
  >;

  filters: {
    "DeployDependencies(address,address,address)": TypedContractEvent<
      DeployDependenciesEvent.InputTuple,
      DeployDependenciesEvent.OutputTuple,
      DeployDependenciesEvent.OutputObject
    >;
    DeployDependencies: TypedContractEvent<
      DeployDependenciesEvent.InputTuple,
      DeployDependenciesEvent.OutputTuple,
      DeployDependenciesEvent.OutputObject
    >;

    "OwnershipTransferred(address,address)": TypedContractEvent<
      OwnershipTransferredEvent.InputTuple,
      OwnershipTransferredEvent.OutputTuple,
      OwnershipTransferredEvent.OutputObject
    >;
    OwnershipTransferred: TypedContractEvent<
      OwnershipTransferredEvent.InputTuple,
      OwnershipTransferredEvent.OutputTuple,
      OwnershipTransferredEvent.OutputObject
    >;

    "PrivateCapsuleCreated(uint256,address)": TypedContractEvent<
      PrivateCapsuleCreatedEvent.InputTuple,
      PrivateCapsuleCreatedEvent.OutputTuple,
      PrivateCapsuleCreatedEvent.OutputObject
    >;
    PrivateCapsuleCreated: TypedContractEvent<
      PrivateCapsuleCreatedEvent.InputTuple,
      PrivateCapsuleCreatedEvent.OutputTuple,
      PrivateCapsuleCreatedEvent.OutputObject
    >;

    "PrivateCapsuleRevealed(uint256,address)": TypedContractEvent<
      PrivateCapsuleRevealedEvent.InputTuple,
      PrivateCapsuleRevealedEvent.OutputTuple,
      PrivateCapsuleRevealedEvent.OutputObject
    >;
    PrivateCapsuleRevealed: TypedContractEvent<
      PrivateCapsuleRevealedEvent.InputTuple,
      PrivateCapsuleRevealedEvent.OutputTuple,
      PrivateCapsuleRevealedEvent.OutputObject
    >;

    "PublicCapsuleCreated(uint256,address)": TypedContractEvent<
      PublicCapsuleCreatedEvent.InputTuple,
      PublicCapsuleCreatedEvent.OutputTuple,
      PublicCapsuleCreatedEvent.OutputObject
    >;
    PublicCapsuleCreated: TypedContractEvent<
      PublicCapsuleCreatedEvent.InputTuple,
      PublicCapsuleCreatedEvent.OutputTuple,
      PublicCapsuleCreatedEvent.OutputObject
    >;

    "PublicCapsuleRevealed(uint256,address)": TypedContractEvent<
      PublicCapsuleRevealedEvent.InputTuple,
      PublicCapsuleRevealedEvent.OutputTuple,
      PublicCapsuleRevealedEvent.OutputObject
    >;
    PublicCapsuleRevealed: TypedContractEvent<
      PublicCapsuleRevealedEvent.InputTuple,
      PublicCapsuleRevealedEvent.OutputTuple,
      PublicCapsuleRevealedEvent.OutputObject
    >;
  };
}
