/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  AirlockErc20Token,
  AirlockErc20TokenInterface,
  Erc20InitParamsStruct,
} from "../../../contracts/AirlockErc20.sol/AirlockErc20Token";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "deploymentId",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "initialSupply",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct Erc20InitParams",
        name: "params",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "deploymentId",
        type: "string",
      },
    ],
    name: "Deployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "authenticateCaller",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "deauthenticateCaller",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f5ffd5b506040516111c23803806111c283398101604081905261002e916103f6565b60a08101518151602083015182919060036100498382610564565b5060046100568282610564565b5050506001600160a01b03811661008757604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61009081610157565b506100b8816001600160a01b03165f908152600660205260409020805460ff19166001179055565b5060608101516007805460ff191660ff90921691909117905560a08101516100df90610157565b60a081015160075461010e91906100fa9060ff16600a610717565b8360800151610109919061072c565b6101a8565b7f1b13dc64671b1e5cf76efe4493bf5ded8299383f3da8205d39f9eb9891c598e58160a0015130836040015160405161014993929190610743565b60405180910390a1506107a9565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0382166101d15760405163ec442f0560e01b81525f600482015260240161007e565b6101dc5f83836101e0565b5050565b6001600160a01b03831661020a578060025f8282546101ff9190610796565b9091555061027a9050565b6001600160a01b0383165f908152602081905260409020548181101561025c5760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161007e565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610296576002805482900390556102b4565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516102f991815260200190565b60405180910390a3505050565b634e487b7160e01b5f52604160045260245ffd5b60405160c081016001600160401b038111828210171561033c5761033c610306565b60405290565b5f82601f830112610351575f5ffd5b81516001600160401b0381111561036a5761036a610306565b604051601f8201601f19908116603f011681016001600160401b038111828210171561039857610398610306565b6040528181528382016020018510156103af575f5ffd5b8160208501602083015e5f918101602001919091529392505050565b805160ff811681146103db575f5ffd5b919050565b80516001600160a01b03811681146103db575f5ffd5b5f60208284031215610406575f5ffd5b81516001600160401b0381111561041b575f5ffd5b820160c0818503121561042c575f5ffd5b61043461031a565b81516001600160401b03811115610449575f5ffd5b61045586828501610342565b82525060208201516001600160401b03811115610470575f5ffd5b61047c86828501610342565b60208301525060408201516001600160401b0381111561049a575f5ffd5b6104a686828501610342565b6040830152506104b8606083016103cb565b6060820152608082810151908201526104d360a083016103e0565b60a0820152949350505050565b600181811c908216806104f457607f821691505b60208210810361051257634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561055f57805f5260205f20601f840160051c8101602085101561053d5750805b601f840160051c820191505b8181101561055c575f8155600101610549565b50505b505050565b81516001600160401b0381111561057d5761057d610306565b6105918161058b84546104e0565b84610518565b6020601f8211600181146105c3575f83156105ac5750848201515b5f19600385901b1c1916600184901b17845561055c565b5f84815260208120601f198516915b828110156105f257878501518255602094850194600190920191016105d2565b508482101561060f57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b5f52601160045260245ffd5b6001815b600184111561066d578085048111156106515761065161061e565b600184161561065f57908102905b60019390931c928002610636565b935093915050565b5f8261068357506001610711565b8161068f57505f610711565b81600181146106a557600281146106af576106cb565b6001915050610711565b60ff8411156106c0576106c061061e565b50506001821b610711565b5060208310610133831016604e8410600b84101617156106ee575081810a610711565b6106fa5f198484610632565b805f190482111561070d5761070d61061e565b0290505b92915050565b5f61072560ff841683610675565b9392505050565b80820281158282048414176107115761071161061e565b60018060a01b038416815260018060a01b0383166020820152606060408201525f82518060608401528060208501608085015e5f608082850101526080601f19601f830116840101915050949350505050565b808201808211156107115761071161061e565b610a0c806107b65f395ff3fe608060405234801561000f575f5ffd5b50600436106100fb575f3560e01c806370a0823111610093578063a0712d6811610063578063a0712d6814610204578063a9059cbb14610217578063dd62ed3e1461022a578063f2fde38b14610262575f5ffd5b806370a08231146101b1578063715018a6146101d95780638da5cb5b146101e157806395d89b41146101fc575f5ffd5b806318160ddd116100ce57806318160ddd1461016457806323b872dd14610176578063313ce567146101895780635ca5025b1461019e575f5ffd5b806301ffc9a7146100ff57806306fdde0314610127578063095ea7b31461013c5780630ab394381461014f575b5f5ffd5b61011261010d36600461083e565b610275565b60405190151581526020015b60405180910390f35b61012f6102ab565b60405161011e919061086c565b61011261014a3660046108bc565b61033b565b61016261015d3660046108e4565b610352565b005b6002545b60405190815260200161011e565b6101126101843660046108fd565b610384565b60075460405160ff909116815260200161011e565b6101626101ac3660046108e4565b6103a7565b6101686101bf3660046108e4565b6001600160a01b03165f9081526020819052604090205490565b6101626103cf565b6005546040516001600160a01b03909116815260200161011e565b61012f6103e2565b610162610212366004610937565b6103f1565b6101126102253660046108bc565b61045e565b61016861023836600461094e565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6101626102703660046108e4565b61046b565b5f6001600160e01b031982166336372b0760e01b14806102a557506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600380546102ba9061097f565b80601f01602080910402602001604051908101604052809291908181526020018280546102e69061097f565b80156103315780601f1061030857610100808354040283529160200191610331565b820191905f5260205f20905b81548152906001019060200180831161031457829003601f168201915b5050505050905090565b5f336103488185856104a5565b5060019392505050565b61035a6104b7565b610381816001600160a01b03165f908152600660205260409020805460ff19166001179055565b50565b5f336103918582856104e4565b61039c858585610560565b506001949350505050565b6103af6104b7565b6001600160a01b03165f908152600660205260409020805460ff19169055565b6103d76104b7565b6103e05f6105bd565b565b6060600480546102ba9061097f565b335f9081526006602052604090205460ff166104545760405162461bcd60e51b815260206004820152601760248201527f4f7065726174696f6e206e6f74207065726d697474656400000000000000000060448201526064015b60405180910390fd5b610381338261060e565b5f33610348818585610560565b6104736104b7565b6001600160a01b03811661049c57604051631e4fbdf760e01b81525f600482015260240161044b565b610381816105bd565b6104b28383836001610646565b505050565b6005546001600160a01b031633146103e05760405163118cdaa760e01b815233600482015260240161044b565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f1981101561055a578181101561054c57604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161044b565b61055a84848484035f610646565b50505050565b6001600160a01b03831661058957604051634b637e8f60e11b81525f600482015260240161044b565b6001600160a01b0382166105b25760405163ec442f0560e01b81525f600482015260240161044b565b6104b2838383610718565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0382166106375760405163ec442f0560e01b81525f600482015260240161044b565b6106425f8383610718565b5050565b6001600160a01b03841661066f5760405163e602df0560e01b81525f600482015260240161044b565b6001600160a01b03831661069857604051634a1406b160e11b81525f600482015260240161044b565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561055a57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161070a91815260200190565b60405180910390a350505050565b6001600160a01b038316610742578060025f82825461073791906109b7565b909155506107b29050565b6001600160a01b0383165f90815260208190526040902054818110156107945760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161044b565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166107ce576002805482900390556107ec565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161083191815260200190565b60405180910390a3505050565b5f6020828403121561084e575f5ffd5b81356001600160e01b031981168114610865575f5ffd5b9392505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146108b7575f5ffd5b919050565b5f5f604083850312156108cd575f5ffd5b6108d6836108a1565b946020939093013593505050565b5f602082840312156108f4575f5ffd5b610865826108a1565b5f5f5f6060848603121561090f575f5ffd5b610918846108a1565b9250610926602085016108a1565b929592945050506040919091013590565b5f60208284031215610947575f5ffd5b5035919050565b5f5f6040838503121561095f575f5ffd5b610968836108a1565b9150610976602084016108a1565b90509250929050565b600181811c9082168061099357607f821691505b6020821081036109b157634e487b7160e01b5f52602260045260245ffd5b50919050565b808201808211156102a557634e487b7160e01b5f52601160045260245ffdfea26469706673582212203382b557006c2cc15aafec61b2885a8d061475a64e0a6f942e2394a21077b27f64736f6c634300081c0033";

type AirlockErc20TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AirlockErc20TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AirlockErc20Token__factory extends ContractFactory {
  constructor(...args: AirlockErc20TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    params: Erc20InitParamsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(params, overrides || {});
  }
  override deploy(
    params: Erc20InitParamsStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(params, overrides || {}) as Promise<
      AirlockErc20Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AirlockErc20Token__factory {
    return super.connect(runner) as AirlockErc20Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AirlockErc20TokenInterface {
    return new Interface(_abi) as AirlockErc20TokenInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AirlockErc20Token {
    return new Contract(address, _abi, runner) as unknown as AirlockErc20Token;
  }
}
