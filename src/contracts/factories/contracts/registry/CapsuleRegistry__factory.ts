/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  CapsuleRegistry,
  CapsuleRegistryInterface,
} from "../../../contracts/registry/CapsuleRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "adminUser",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "message",
            type: "string",
          },
          {
            internalType: "string",
            name: "readKey",
            type: "string",
          },
          {
            internalType: "string",
            name: "revealKey",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "unlockTimestamp",
            type: "uint256",
          },
        ],
        internalType: "struct PrivateCapsuleCreateParams",
        name: "createParams",
        type: "tuple",
      },
    ],
    name: "addPrivateCapsuleRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "message",
            type: "string",
          },
          {
            internalType: "string",
            name: "revealKey",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "unlockTimestamp",
            type: "uint256",
          },
        ],
        internalType: "struct PublicCapsuleCreateParams",
        name: "createParams",
        type: "tuple",
      },
    ],
    name: "addPublicCapsuleRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "authenticateCaller",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "deauthenticateCaller",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "readKey",
            type: "string",
          },
        ],
        internalType: "struct ReadPrivateCapsuleParams",
        name: "readParams",
        type: "tuple",
      },
    ],
    name: "readPrivateCapsuleRecord",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "message",
                type: "string",
              },
              {
                internalType: "bytes32",
                name: "readMessageHash",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "revealMessageHash",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "unlockTimestamp",
                type: "uint256",
              },
            ],
            internalType: "struct PrivateCapsuleParams",
            name: "data",
            type: "tuple",
          },
          {
            internalType: "enum CapsuleStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct PrivateCapsuleData",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
        ],
        internalType: "struct ReadPublicCapsuleParams",
        name: "readParams",
        type: "tuple",
      },
    ],
    name: "readPublicCapsuleRecord",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "message",
                type: "string",
              },
              {
                internalType: "bytes32",
                name: "revealMessageHash",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "unlockTimestamp",
                type: "uint256",
              },
            ],
            internalType: "struct PublicCapsuleParams",
            name: "data",
            type: "tuple",
          },
          {
            internalType: "enum CapsuleStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct PublicCapsuleData",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "revealKey",
            type: "string",
          },
        ],
        internalType: "struct RevealPrivateCapsuleParams",
        name: "revealParams",
        type: "tuple",
      },
    ],
    name: "revealPrivateCapsuleRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "revealKey",
            type: "string",
          },
        ],
        internalType: "struct RevealPublicCapsuleParams",
        name: "revealParams",
        type: "tuple",
      },
    ],
    name: "revealPublicCapsuleRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type CapsuleRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CapsuleRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CapsuleRegistry__factory extends ContractFactory {
  constructor(...args: CapsuleRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    adminUser: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(adminUser, overrides || {});
  }
  override deploy(
    adminUser: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(adminUser, overrides || {}) as Promise<
      CapsuleRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CapsuleRegistry__factory {
    return super.connect(runner) as CapsuleRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CapsuleRegistryInterface {
    return new Interface(_abi) as CapsuleRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CapsuleRegistry {
    return new Contract(address, _abi, runner) as unknown as CapsuleRegistry;
  }
}
