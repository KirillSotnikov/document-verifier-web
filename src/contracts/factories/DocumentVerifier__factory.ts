/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  DocumentVerifier,
  DocumentVerifierInterface,
} from "../DocumentVerifier";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "documentHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "documentName",
        type: "string",
      },
    ],
    name: "DocumentRegistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "documents",
    outputs: [
      {
        internalType: "bytes32",
        name: "documentHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "documentName",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserDocuments",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "documentHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "string",
            name: "documentName",
            type: "string",
          },
        ],
        internalType: "struct DocumentMetadata[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "documentHash",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "documentName",
            type: "string",
          },
        ],
        internalType: "struct DocumentRegisterParams",
        name: "_params",
        type: "tuple",
      },
    ],
    name: "registerDocument",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_documentHash",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "_newName",
        type: "string",
      },
    ],
    name: "updateDocumentName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userDocuments",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_documentHash",
        type: "bytes32",
      },
    ],
    name: "verifyDocument",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "documentHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "string",
            name: "documentName",
            type: "string",
          },
        ],
        internalType: "struct DocumentMetadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f5ffd5b50610c7e8061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610060575f3560e01c80632b2805db146100645780634c5ab50d14610090578063577a1b92146100a557806390a4b162146100c657806391ec9a07146100e6578063fe35089f146100f9575b5f5ffd5b6100776100723660046107c0565b610119565b6040516100879493929190610805565b60405180910390f35b6100a361009e3660046108da565b6101d3565b005b6100b86100b3366004610939565b6102b6565b604051908152602001610087565b6100d96100d4366004610961565b6102e1565b60405161008791906109c3565b6100a36100f4366004610a26565b610501565b61010c6101073660046107c0565b6105b2565b6040516100879190610aba565b5f602081905290815260409020805460018201546002830154600384018054939492936001600160a01b03909216929161015290610acc565b80601f016020809104026020016040519081016040528092919081815260200182805461017e90610acc565b80156101c95780601f106101a0576101008083540402835291602001916101c9565b820191905f5260205f20905b8154815290600101906020018083116101ac57829003601f168201915b5050505050905084565b5f828152602081905260408120600101548391036102325760405162461bcd60e51b8152602060048201526017602482015276111bd8dd5b595b9d081b9bdd081c9959da5cdd195c9959604a1b60448201526064015b60405180910390fd5b5f8381526020819052604090206002015483906001600160a01b031633146102955760405162461bcd60e51b81526020600482015260166024820152752737ba103a3432903237b1bab6b2b73a1037bbb732b960511b6044820152606401610229565b5f8481526020819052604090206003016102af8482610b47565b5050505050565b6001602052815f5260405f2081815481106102cf575f80fd5b905f5260205f20015f91509150505481565b6001600160a01b0381165f90815260016020908152604080832080548251818502810185019093528083526060949383018282801561033d57602002820191905f5260205f20905b815481526020019060010190808311610329575b505050505090505f815167ffffffffffffffff81111561035f5761035f61083b565b6040519080825280602002602001820160405280156103c157816020015b6103ae60405180608001604052805f81526020015f81526020015f6001600160a01b03168152602001606081525090565b81526020019060019003908161037d5790505b5090505f5b82518110156104f9575f5f8483815181106103e3576103e3610c02565b602002602001015181526020019081526020015f206040518060800160405290815f820154815260200160018201548152602001600282015f9054906101000a90046001600160a01b03166001600160a01b03166001600160a01b0316815260200160038201805461045490610acc565b80601f016020809104026020016040519081016040528092919081815260200182805461048090610acc565b80156104cb5780601f106104a2576101008083540402835291602001916104cb565b820191905f5260205f20905b8154815290600101906020018083116104ae57829003601f168201915b5050505050815250508282815181106104e6576104e6610c02565b60209081029190910101526001016103c6565b509392505050565b80515f81815260208190526040902060010154156105615760405162461bcd60e51b815260206004820152601b60248201527f446f63756d656e7420616c7265616479207265676973746572656400000000006044820152606401610229565b3361056c8382610719565b825160208401516040517f76dad2a8c14d1a22ea742c9fe60f5f8a106e5f7bf2de36143a018d81b1bb3677916105a59142918691610c16565b60405180910390a2505050565b6105e360405180608001604052805f81526020015f81526020015f6001600160a01b03168152602001606081525090565b5f8281526020819052604081206001015483910361063d5760405162461bcd60e51b8152602060048201526017602482015276111bd8dd5b595b9d081b9bdd081c9959da5cdd195c9959604a1b6044820152606401610229565b5f8381526020818152604080832081516080810183528154815260018201549381019390935260028101546001600160a01b03169183019190915260038101805460608401919061068d90610acc565b80601f01602080910402602001604051908101604052809291908181526020018280546106b990610acc565b80156107045780601f106106db57610100808354040283529160200191610704565b820191905f5260205f20905b8154815290600101906020018083116106e757829003601f168201915b50505091909252509194505050505b50919050565b60408051608081018252835181524260208083019182526001600160a01b03858116848601908152828801516060860190815288515f9081529384905295909220845181559251600184015590516002830180546001600160a01b03191691909216179055915190919060038201906107929082610b47565b5050506001600160a01b03165f90815260016020818152604083209351845492830185559383529091200155565b5f602082840312156107d0575f5ffd5b5035919050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b84815283602082015260018060a01b0383166040820152608060608201525f61083160808301846107d7565b9695505050505050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f83011261085e575f5ffd5b813567ffffffffffffffff8111156108785761087861083b565b604051601f8201601f19908116603f0116810167ffffffffffffffff811182821017156108a7576108a761083b565b6040528181528382016020018510156108be575f5ffd5b816020850160208301375f918101602001919091529392505050565b5f5f604083850312156108eb575f5ffd5b82359150602083013567ffffffffffffffff811115610908575f5ffd5b6109148582860161084f565b9150509250929050565b80356001600160a01b0381168114610934575f5ffd5b919050565b5f5f6040838503121561094a575f5ffd5b6109538361091e565b946020939093013593505050565b5f60208284031215610971575f5ffd5b61097a8261091e565b9392505050565b805182526020810151602083015260018060a01b0360408201511660408301525f6060820151608060608501526109bb60808501826107d7565b949350505050565b5f602082016020835280845180835260408501915060408160051b8601019250602086015f5b82811015610a1a57603f19878603018452610a05858351610981565b945060209384019391909101906001016109e9565b50929695505050505050565b5f60208284031215610a36575f5ffd5b813567ffffffffffffffff811115610a4c575f5ffd5b820160408185031215610a5d575f5ffd5b6040805190810167ffffffffffffffff81118282101715610a8057610a8061083b565b60405281358152602082013567ffffffffffffffff811115610aa0575f5ffd5b610aac8682850161084f565b602083015250949350505050565b602081525f61097a6020830184610981565b600181811c90821680610ae057607f821691505b60208210810361071357634e487b7160e01b5f52602260045260245ffd5b601f821115610b4257805f5260205f20601f840160051c81016020851015610b235750805b601f840160051c820191505b818110156102af575f8155600101610b2f565b505050565b815167ffffffffffffffff811115610b6157610b6161083b565b610b7581610b6f8454610acc565b84610afe565b6020601f821160018114610ba7575f8315610b905750848201515b5f19600385901b1c1916600184901b1784556102af565b5f84815260208120601f198516915b82811015610bd65787850151825560209485019460019092019101610bb6565b5084821015610bf357868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b5f52603260045260245ffd5b8381526001600160a01b03831660208201526060604082018190525f90610c3f908301846107d7565b9594505050505056fea2646970667358221220b38351720988a138e6c4d3f6fc5a1eade8547fb7b4da22d4d12f251bbdc532f364736f6c634300081c0033";

type DocumentVerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DocumentVerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DocumentVerifier__factory extends ContractFactory {
  constructor(...args: DocumentVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DocumentVerifier & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DocumentVerifier__factory {
    return super.connect(runner) as DocumentVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DocumentVerifierInterface {
    return new Interface(_abi) as DocumentVerifierInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DocumentVerifier {
    return new Contract(address, _abi, runner) as unknown as DocumentVerifier;
  }
}
